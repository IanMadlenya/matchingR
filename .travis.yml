# .travis.yml for matchingR using container-based infrastructure

# use c as catch-all language
language: c

# use containers
sudo: false

# define environmental variables for R CMD check
env:
  global:
   - _R_CHECK_CRAN_INCOMING_=FALSE

# only run for pushes to master branch
branches:
  only:
   - master

# install r-base-dev:
# use r-packages-precise (https://cran.r-project.org/bin/linux/ubuntu/precise/) as source
# which is white listed (https://github.com/travis-ci/apt-source-whitelist/)
# also install latex, pandoc, qpdf and valgrind
addons:
  apt:
    sources:
    - r-packages-precise
    packages:
    - r-base-dev
    - r-recommended
    - pandoc
    - pandoc-citeproc
    - texlive-base
    - texlive-latex-base
    - texlive-generic-recommended
    - texlive-fonts-recommended
    - texlive-fonts-extra
    - texlive-extra-utils 
    - texlive-latex-recommended 
    - texlive-latex-extra
    - texinfo
    - lmodern
    - qpdf
    - valgrind

# cache local R libraries directory:
cache:
  directories:
    - ~/Rlib

# install the package and dependencies:
# - create directory for R libraries (if not already exists)
# - create .Renviron with location of R libraries
# - define R repository in .Rprofile
# - add .travis.yml to .Rbuildignore
# - install devtools if not already installed
# - install covr if not already installed
# - install dependencies
install:
  - mkdir -p ~/Rlib
  - echo 'R_LIBS=~/Rlib' > .Renviron
  - echo 'options(repos = "http://cran.rstudio.com")' > .Rprofile
  - echo '.travis.yml' > .Rbuildignore
  - Rscript -e 'if(!"devtools" %in% rownames(installed.packages())) { install.packages("devtools", dependencies=TRUE, repos="http://cran.rstudio.com/", lib="~/Rlib") }'
  - Rscript -e 'if(!"covr" %in% rownames(installed.packages())) { install.packages("covr", dependencies=TRUE, repos="http://cran.rstudio.com/", lib="~/Rlib") }'
  - Rscript -e 'if(!"testthat" %in% rownames(installed.packages())) { install.packages("testthat", dependencies=TRUE, repos="http://cran.rstudio.com/", lib="~/Rlib") }'
  - Rscript -e 'update.packages(ask = FALSE, instlib = "~/Rlib")'
  - Rscript -e 'devtools::install_deps(pkg = ".", dependencies = TRUE)'

# build, check, and install package
# run all examples and the vignettes through valgrind
script:
  - R CMD build . 
  - PKG_FILE_NAME=$(ls -1t *.tar.gz | head -n 1)
  - R CMD check "${PKG_FILE_NAME}" --as-cran 
  - R CMD INSTALL "${PKG_FILE_NAME}"
  - R -d valgrind --no-save < matchingR.Rcheck/matchingR-Ex.R
  - R -d valgrind --no-save < matchingR.Rcheck/matchingR/doc/matchingR-intro.R
  - R -d valgrind --no-save < matchingR.Rcheck/matchingR/doc/matchingR-performance.R

# report coverage rate to coveralls
after_success:
  - Rscript -e 'covr::coveralls(exclusions = list("src/RcppExports.cpp", "R/deprecated.R"))'

# send e-mails if stuff changes
notifications:
  email:
    on_success: change
    on_failure: change
